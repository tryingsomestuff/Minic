#!/bin/bash
ulimit -s unlimited

export CXX=g++
export CC=gcc

source $(dirname $0)/common
cd_root

FATHOM_PRESENT=0
if [ -e Fathom/src/tbprobe.h ]; then
   FATHOM_PRESENT=1
   echo "found Fathom lib, trying to build"
   $(dirname $0)/buildFathom.sh "$@"
fi

do_title "Building Minic for Linux valgrind"

if [ $FATHOM_PRESENT = "1" ]; then
   lib=fathom_dev_linux_x64.o
   OPT="$OPT $dir/Fathom/src/$lib -I$dir/Fathom/src"
fi

g++ -g -std=c++17 $STANDARDSOURCE $NNUESOURCE -ISource -ISource/nnue $OPT -lpthread -ldl -DDEBUG_TOOL -o minic.valgrind
#valgrind --leak-check=full --track-origins=yes --show-leak-kinds=all ./minic.valgrind -analyze "shirov" 10
#valgrind --tool=exp-sgcheck ./minic.valgrind -analyze "shirov" 10
#valgrind --log-file=valgrind.log --tool=memcheck --track-origins=yes ./minic.valgrind -analyze "shirov" 10 -minOutputLevel 0 
#valgrind --log-file=valgrind.log --tool=memcheck --track-origins=yes --leak-check=full ./minic.valgrind -analyze "shirov" 10 -minOutputLevel 0 -NNUEFile "Tourney/nn.bin" 
#valgrind --log-file=valgrind.log --tool=memcheck --track-origins=yes --leak-check=full ./minic.valgrind -uci -NNUEFile Tourney/nn.bin -minOutputLevel 0
valgrind --log-file=valgrind.log --tool=memcheck --track-origins=yes --leak-check=full --show-leak-kinds=all ./minic.valgrind -selfplay 9 2 -randomPly 6 -minOutputLevel 0 -NNUEFile ../NNUE-Nets/narcotized_nightshift.bin
